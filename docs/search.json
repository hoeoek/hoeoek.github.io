[
  {
    "objectID": "posts/first_post_beer_label/index.html",
    "href": "posts/first_post_beer_label/index.html",
    "title": "First Post: Beer Label",
    "section": "",
    "text": "In this very first post, I want to totally rush past the part of introducing myself and instead leave that to the About page. However, while the blog will be focused on data science, occasionally other things that I find interesting will sneak in. One of these things is beer, more specifically brewing beer - and what comes along with it. I have been brewing for a few years now and to make them feel a little more like the real deal, I like to design my own labels.\nIn this post I’ll share some R code for creating this map-style minimalist beer label that i recently used for a batch of IPA:\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a work in progress, check back in a few days for a more polished post!\n\n\n\n\ntidyverse is the R metapackage to rule them all and includes a bunch of packages that are super useful for data wrangling. It also loads the wonderful magrittr pipe operator (%>%). osmdata is a wrapper for communicating with the Open Street Map API, and sf turns R into a geographic information system (GIS).\n\nlibrary(tidyverse) # The go-to library for basically doing anything in R nowadays\nlibrary(osmdata) # For downloading data from OpenStreetMap\nlibrary(sf) # For working with simple features, such as map stuff\n\n\n\n\nThis beer label will use the road layout for the city of Umeå in the north of Sweden. osmdata has some great functions for this.\n\ngetbb() returns the bounding box (coordinates of the 4 corners of a rectangle) associated with a geographical area.\nopq() builds the database query.\nadd_osm_features() adds, you’ve guessed it, our desired features to the query.\nosmdata_sf() Turns the results of the query into sf format.\n\nI’ll use highway features this time, but check Open Street Maps wiki for other features.\nI’ll separate the roads and streets into two sf features to be able to draw them using different line widths on the label. The output of osmdata_sf() will contain more than we need, so we extract just the line features using purrr::pluck()\n\n#choose area\nbbx <- getbb(\"Umeå, Sweden\")\n\n# large roads\nroads <- bbx %>%\n  opq() %>%\n  add_osm_feature(\n    key = \"highway\",\n    value = c(\"motorway\", \"trunk\", \"primary\",\n              \"secondary\", \"tertiary\", \"motorway_link\",\n              \"trunk_link\", \"primary_link\", \"secondary_link\",\n              \"tertiary_link\")\n    ) %>%\n  osmdata_sf() %>% \n  pluck(\"osm_lines\") \n\n# small roads\nstreets <- bbx %>%\n  opq() %>%\n  add_osm_feature(\n    key = \"highway\",\n    value = c(\"residential\", \"living_street\", \"service\",\n              \"unclassified\", \"pedestrian\", \"footway\",\n              \"track\", \"path\")\n    ) %>%\n  osmdata_sf() %>% \n  pluck(\"osm_lines\") \n\n\n\n\nIn this case I made the map-part of the label have a circular shape, with its center being somewhere downtown Umeå. I’ll get the coordinates non-programmatically (lazy) from just right clicking in Google Maps. Google Maps and OSM use the same coordinate system and projection, so the data smoothly slips into the processing pipeline without any conversion. Happy days.\nSince this is “just” a beer label, I won’t bother too much about dealing with projections - I’ll stick to WGS84/ESPG4326 which should produce good enough visual results.\n\n# make a point that'll be the circle center\ncenter <- c(lat = \"63.82400114332574\", long = \"20.262895955922296\")\n\n# Buffer the point to make the actual circle\ncircle <- tibble(lat = center[\"lat\"], long = center[\"long\"]) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %>%\n  st_buffer(dist = 3500, nQuadSegs = 200)\n\nNow we populate the circle with some roadage:\n\nroads_in_circle <- st_intersection(circle, roads)\nstreets_in_circle <- st_intersection(circle, streets)\n\nAnd plot our simple beer label using ggplot2:\n\nggplot() +\n  \n  # create the thinner streets\n  geom_sf(data = streets_in_circle,\n          linewidth = 0.3,\n          colour = \"gray30\") +\n  \n  # create the thicker streets\n  geom_sf(data = roads_in_circle,\n          linewidth = 0.5,\n          colour = \"gray10\") +\n  \n  # Set some labels\n  labs(title = \"UmeIPA\",\n       caption = \"Northern Made | Dry-Hopped\") +\n  theme_void() + # remove plot objects (x & y axis etc)\n  \n  # Theme our text to make it look fancier\n  theme(\n    plot.title = element_text(\n      family = \"mono\",\n      size = 30,\n      hjust = 0.5,\n      margin = margin(t = 10)\n    ),\n    plot.caption = element_text(\n      family = \"mono\",\n      size = 12,\n      hjust = 0.5,\n      margin = margin(b = 10)\n    )\n  )\n\n\n\n\nTo save it as an image, we may use:\n\nggsave(\"beer_label.png\", height = 6, width = 6, bg = \"white\")\n\nDoesn’t this make the hazy soup that stinks up your basement taste like what love feels like?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Christian Höök",
    "section": "",
    "text": "First Post: Beer Label\n\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this blog",
    "section": "",
    "text": "Note\n\n\n\nThis page is currently being worked on. Check back in a few days and it’ll hopefully be neater!\nI am a PhD student working on leveraging machine learning to increase competitiveness for bio-based supply chains."
  },
  {
    "objectID": "about.html#about-this-blog-and-myself",
    "href": "about.html#about-this-blog-and-myself",
    "title": "About this blog",
    "section": "About this blog (and myself)",
    "text": "About this blog (and myself)\nI am a PhD student working on leveraging machine learning to increase competitiveness for bio-based supply chains."
  },
  {
    "objectID": "about.html#publications",
    "href": "about.html#publications",
    "title": "About this blog",
    "section": "Publications",
    "text": "Publications\nHöök (2022). Supply and Command: Quantitative Methods for Risk Management and Resilience in Wood Supply. Proceedings of The Joint 44th Annual Meeting of Council on Forest Engineering, the 54th International Symposium on Forest Mechanization. COFE;FORMEC. October 4-7, Corvallis, Oregon. ISBN: 979-8-9855282-1-3. https://www.formec.org/images/proceedings/2022/Proceedings_COFE-FORMEC-IUFRO_2022.pdf [2023-03-20]\nBergstrom et al. (2022). Effects of boom-corridor thinning on harvester productivity and residual stand structure. International Journal of Forest Engineering, 33. https://doi.org/10.1080/14942119.2022.2058258\nHöök (2020). Unmanned aerial vehicle photography and photogrammetry in the Smallwood project. (SmallWood report, November 2020). https://www.smallwood.eu/wp-content/uploads/sites/4/2021/01/SmallWood-Drone-Report_Christian_Hook.pdf [2023-02-18]\nHöök (2020). Promotional video of Smallwood project [Video]. https://www.youtube.com/watch?v=vkZ1UI9yZeo [2022-03-14]\nHöök et al. (2020). A Method of Finding HCT Roundwood Corridors for Reduction of GHG Emissions and Fuel Costs in Sweden. Forests, 11(2). https://doi.org/10.3390/f11020220"
  }
]